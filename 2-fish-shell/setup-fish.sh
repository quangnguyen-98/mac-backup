#!/bin/bash

# =============================================================================
#  Fish Shell Complete Setup Script
# =============================================================================
#  Run AFTER 1-app/setup.sh
#  This script will:
#    1. Set Fish as default shell
#    2. Create config.fish with all PATH setup
#    3. Install Fisher plugin manager
#    4. Install Tide prompt (you'll configure style with 'tide configure')
#    5. Install useful Fish plugins
#    6. Setup Nerd Font and auto-configure VSCode terminal
# =============================================================================

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
BOLD='\033[1m'
NC='\033[0m'

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo ""
echo -e "${BOLD}=============================================="
echo "  üêü Fish Shell Complete Setup"
echo "  Beautiful prompt with icons & info"
echo "==============================================${NC}"
echo ""
sleep 1

# =============================================================================
# Step 1: Check Fish is installed
# =============================================================================
echo -e "${BLUE}${BOLD}[1/5] Checking Fish installation...${NC}"
echo ""

if ! command -v fish &> /dev/null; then
    echo -e "${RED}‚ùå Fish not found!${NC}"
    echo "Please run 1-app/setup.sh first to install Fish"
    exit 1
fi

FISH_PATH=$(which fish)
echo -e "${GREEN}‚úÖ Fish found at: $FISH_PATH${NC}"
echo ""
sleep 1

# =============================================================================
# Step 2: Set Fish as default shell
# =============================================================================
echo -e "${BLUE}${BOLD}[2/5] Setting Fish as default shell...${NC}"
echo ""

# Add Fish to allowed shells if not already there
if ! grep -q "$FISH_PATH" /etc/shells; then
    echo "Adding Fish to /etc/shells (requires sudo)..."
    echo "$FISH_PATH" | sudo tee -a /etc/shells > /dev/null
    echo -e "${GREEN}‚úÖ Fish added to /etc/shells${NC}"
fi

# Set Fish as default shell
if [ "$SHELL" != "$FISH_PATH" ]; then
    echo "Setting Fish as default shell..."
    chsh -s "$FISH_PATH"
    echo -e "${GREEN}‚úÖ Fish set as default shell${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  You'll need to restart Terminal for this to take effect${NC}"
else
    echo -e "${GREEN}‚úÖ Fish already default shell${NC}"
fi

echo ""
sleep 1

# =============================================================================
# Step 3: Create config.fish with PATH setup
# =============================================================================
echo -e "${BLUE}${BOLD}[3/5] Creating Fish configuration...${NC}"
echo ""

mkdir -p ~/.config/fish

cat > ~/.config/fish/config.fish << 'EOF'
# Fish Shell Configuration
# Auto-generated by mac-backup 2-fish-shell setup

# Homebrew
if test -d /opt/homebrew
    eval (/opt/homebrew/bin/brew shellenv)
else if test -d /usr/local
    eval (/usr/local/bin/brew shellenv)
end

# Python (pyenv)
if command -v pyenv > /dev/null
    pyenv init - | source
    pyenv virtualenv-init - | source
end

# Node.js (fnm)
if status is-interactive; and command -v fnm > /dev/null
    fnm env --use-on-cd | source
end

# Go (goenv)
if command -v goenv > /dev/null
    set -gx GOENV_ROOT \$HOME/.goenv
    fish_add_path \$GOENV_ROOT/bin
    goenv init - | source
    fish_add_path \$GOROOT/bin
    fish_add_path \$GOPATH/bin
end

# Java (jenv)
if command -v jenv > /dev/null
    set -gx JENV_ROOT \$HOME/.jenv
    fish_add_path \$JENV_ROOT/bin
    jenv init - | source
end

# Rust (rustup & cargo)
if test -f ~/.cargo/env.fish
    source ~/.cargo/env.fish
end

# uv (Python package manager)
if command -v uv > /dev/null
    # uv is usually installed to ~/.local/bin, already in PATH
    # No additional setup needed
end

# PostgreSQL client (libpq)
if test -d $HOMEBREW_PREFIX/opt/libpq/bin
    fish_add_path $HOMEBREW_PREFIX/opt/libpq/bin
end

# Direnv
if command -v direnv > /dev/null
    direnv hook fish | source
end

# fzf (Fuzzy Finder)
if command -v fzf > /dev/null
    fzf --fish | source
end

# zoxide (Smart cd)
if command -v zoxide > /dev/null
    zoxide init fish | source
    alias cd='z'  # Use zoxide for smart directory jump
end

# Custom bin directories (for CLI tools installed later)
# Common locations for user-installed binaries
if test -d ~/.local/bin
    fish_add_path ~/.local/bin  # Python pip --user, pipx, etc.
end

if test -d ~/bin
    fish_add_path ~/bin  # User scripts
end

if test -d ~/.cargo/bin
    fish_add_path ~/.cargo/bin  # Rust cargo install
end

if test -d ~/go/bin
    fish_add_path ~/go/bin  # Go install
end

# Android SDK (if Android Studio installed)
if test -d ~/Library/Android/sdk
    set -gx ANDROID_HOME ~/Library/Android/sdk
    fish_add_path $ANDROID_HOME/platform-tools  # adb, fastboot
    fish_add_path $ANDROID_HOME/cmdline-tools/latest/bin  # sdkmanager, avdmanager
    fish_add_path $ANDROID_HOME/emulator  # Android emulator
end

# Java (if installed)
# Will use the latest version if multiple installed
if test -d /Library/Java/JavaVirtualMachines
    set -l java_homes /Library/Java/JavaVirtualMachines/*.jdk/Contents/Home
    if test (count \$java_homes) -gt 0; and test -d \$java_homes[1]
        # Use the last (latest) version
        set -gx JAVA_HOME \$java_homes[-1]
        fish_add_path \$JAVA_HOME/bin
    end
end

# Editor
set -gx EDITOR vim
EOF

echo -e "${GREEN}‚úÖ Config.fish created at ~/.config/fish/config.fish${NC}"
echo ""
sleep 1

# =============================================================================
# Step 4: Install Fisher & Plugins
# =============================================================================
echo -e "${BLUE}${BOLD}[4/5] Installing Fish plugins...${NC}"
echo ""

# Install Fisher
echo "üì¶ Installing Fisher plugin manager..."
fish -c "curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher install jorgebucaran/fisher"
echo -e "${GREEN}‚úÖ Fisher installed${NC}"
echo ""

# Install Tide
echo "üåä Installing Tide prompt..."
fish -c "fisher install IlanCosman/tide@v6"
echo -e "${GREEN}‚úÖ Tide installed${NC}"
echo ""

# Install other useful plugins
echo "üîç Installing fzf.fish (fuzzy finder)..."
fish -c "fisher install PatrickF1/fzf.fish"
echo -e "${GREEN}‚úÖ fzf.fish installed${NC}"
echo ""

echo "üîî Installing done (command notifications)..."
fish -c "fisher install franciscolourenco/done"
echo -e "${GREEN}‚úÖ done installed${NC}"
echo ""

sleep 1

# =============================================================================
# Step 5: Tide installed - Ready for configuration
# =============================================================================
echo -e "${BLUE}${BOLD}[5/6] Tide installed successfully!${NC}"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  Tide needs to be configured by running the configuration wizard.${NC}"
echo ""
echo "After restarting Terminal, run this command to configure Tide:"
echo -e "  ${GREEN}${BOLD}tide configure${NC}"
echo ""
echo "The wizard will let you choose:"
echo "  ‚Ä¢ Style (Lean / Classic / Rainbow)"
echo "  ‚Ä¢ Color scheme (True color recommended)"
echo "  ‚Ä¢ Time format"
echo "  ‚Ä¢ Icons (Many icons - if using Nerd Font)"
echo "  ‚Ä¢ Transient prompt"
echo ""

# =============================================================================
# Step 6: Verify Nerd Font & Configure VSCode terminal
# =============================================================================
echo -e "${BLUE}${BOLD}[6/6] Configuring terminal fonts...${NC}"
echo ""

# Verify Nerd Font is installed (should be from step 1)
if ls ~/Library/Fonts/*MesloLGS*Nerd* &>/dev/null || ls /Library/Fonts/*MesloLGS*Nerd* &>/dev/null; then
    echo -e "${GREEN}‚úÖ MesloLGS Nerd Font detected${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  MesloLGS Nerd Font not found!${NC}"
    echo "   Font should have been installed in step 1 (1-app/Brewfile)"
    echo "   To install manually: brew install --cask font-meslo-lg-nerd-font"
fi

echo ""

# Auto-configure VSCode terminal font
VSCODE_SETTINGS="$HOME/Library/Application Support/Code/User/settings.json"
if [ -f "$VSCODE_SETTINGS" ]; then
    echo "üîß Configuring VSCode terminal font..."

    # Check if terminal font is already configured
    if ! grep -q "terminal.integrated.fontFamily" "$VSCODE_SETTINGS"; then
        # Backup original file
        cp "$VSCODE_SETTINGS" "$VSCODE_SETTINGS.backup"

        # Add terminal font settings before the last closing brace
        sed -i '' '$ s/}/  "terminal.integrated.fontFamily": "MesloLGS Nerd Font Mono",\
  "terminal.integrated.fontSize": 13\
}/' "$VSCODE_SETTINGS"
        echo -e "${GREEN}‚úÖ VSCode terminal font configured${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  VSCode terminal font already configured${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  VSCode settings not found - skipping VSCode config${NC}"
fi

echo ""
sleep 1

# =============================================================================
# Done!
# =============================================================================
echo -e "${GREEN}${BOLD}=============================================="
echo "  ‚úÖ Fish Shell Setup Complete!"
echo "==============================================${NC}"
echo ""
echo "What was configured:"
echo "  ‚úÖ Fish set as default shell"
echo "  ‚úÖ config.fish with all PATH setup (Homebrew, fnm, pyenv, zoxide, etc.)"
echo "  ‚úÖ Fisher plugin manager"
echo "  ‚úÖ Tide prompt (installed, ready to configure)"
echo "  ‚úÖ fzf.fish (Ctrl+R for history, Ctrl+Alt+F for files)"
echo "  ‚úÖ done (notifications for long commands)"
echo "  ‚úÖ MesloLGS Nerd Font (for icons)"
echo "  ‚úÖ VSCode terminal font (auto-configured)"
echo ""
echo "Next steps:"
echo "  1. ${BOLD}Set font in your Terminal app:${NC}"
echo ""
echo "     ${YELLOW}iTerm2:${NC}"
echo "       Preferences ‚Üí Profiles ‚Üí Text ‚Üí Font ‚Üí ${BOLD}MesloLGS Nerd Font Mono${NC}"
echo ""
echo "     ${YELLOW}Terminal.app:${NC}"
echo "       Preferences ‚Üí Profiles ‚Üí Font ‚Üí ${BOLD}MesloLGS Nerd Font Mono${NC}"
echo ""
echo "     ${YELLOW}JetBrains IDEs (PyCharm, WebStorm, etc.):${NC}"
echo "       Settings ‚Üí Editor ‚Üí Color Scheme ‚Üí Console Font"
echo "       ‚úÖ Use console font instead of default"
echo "       Font: ${BOLD}MesloLGS Nerd Font Mono${NC}, Size: 13"
echo ""
echo "     ${GREEN}VSCode: Already configured! ‚úÖ${NC}"
echo ""
echo "  2. ${BOLD}Restart Terminal${NC} (fully close and reopen)"
echo ""
echo "  3. ${BOLD}Configure Tide prompt:${NC}"
echo "     ${YELLOW}tide configure${NC}"
echo "     Choose style: ${BOLD}Rainbow${NC} (recommended for icons + info)"
echo ""
echo "  4. ${BOLD}Enjoy your beautiful prompt!${NC} üé®"
echo "     ‚Ä¢ Git info, Python/Node versions shown automatically"
echo "     ‚Ä¢ Ctrl+R: Search command history"
echo "     ‚Ä¢ z <dir>: Smart directory jump"
echo ""
echo -e "${GREEN}üéâ Happy coding!${NC}"
echo ""
